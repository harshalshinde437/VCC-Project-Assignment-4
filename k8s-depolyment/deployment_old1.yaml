apiVersion: apps/v1
kind: Deployment
metadata:
  name: fraud-detection-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fraud-detection-app
  template:
    metadata:
      labels:
        app: fraud-detection-app
    spec:
      initContainers:
      - name: init-external-ip
        image: bitnami/kubectl:latest
        command:
          - /bin/sh
          - -c
          - >
            while true; do
              EXTERNAL_IP=$(kubectl get service fraud-detection-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}');
              if [ ! -z "$EXTERNAL_IP" ]; then
                echo "EXTERNAL_IP is $EXTERNAL_IP";
                echo "EXTERNAL_IP=$EXTERNAL_IP" > /app/.env;
                break;
              fi;
              echo "Waiting for external IP...";
              sleep 5;
            done;
        volumeMounts:
          - name: config-volume
            mountPath: /app/.env
      containers:
      - name: fraud-detection-container
        image: asia-south1-docker.pkg.dev/vcc-group-28-project-g23ai2045/vcc-repo/fraud-detection-app:version-4
        ports:
        - containerPort: 8000
        env:
        - name: DJANGO_SETTINGS_MODULE
          value: "/fraud_detection/settings.py"  # Adjust with your actual settings module
        - name: EXTERNAL_IP
          valueFrom:
            configMapKeyRef:
              name: django-config
              key: EXTERNAL_IP
        volumeMounts:
        - name: config-volume
          mountPath: /app/.env
      volumes:
      - name: config-volume
        configMap:
          name: django-config
